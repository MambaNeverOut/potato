{"version":3,"sources":["config/history.ts","redux/actions/todos.ts","redux/actionTypes.ts","config/axios.ts","components/Tomatoes/CountDown.tsx","components/Todos/TodoInput.tsx","components/Todos/TodoItem.tsx","components/Todos/Todos.tsx","components/Tomatoes/TomatoAction.tsx","components/Tomatoes/TomatoList.tsx","components/Tomatoes/Tomatoes.tsx","redux/actions/tomatoes.ts","components/Statistics/TodoHistory/TodoHistoryTodoItem.tsx","components/Statistics/TodoHistory/TodoHistory.tsx","components/Statistics/Statistics.tsx","components/Home/Home.tsx","components/Login/Login.tsx","components/SignUp/SignUp.tsx","App.tsx","serviceWorker.ts","redux/reducers/index.ts","redux/reducers/todos.ts","redux/reducers/tomatoes.ts","redux/store.ts","index.tsx"],"names":["publicUrl","history","createBrowserHistory","basename","updateTodo","payload","type","instance","axios","create","baseURL","headers","interceptors","request","use","config","xToken","localStorage","getItem","error","console","log","Promise","reject","response","setItem","status","push","timerId","TodoInput","props","onKeyUp","e","keyCode","state","description","postTodo","a","post","addTodo","data","resource","Error","setState","this","suffix","onClick","className","id","placeholder","allowClear","value","onChange","target","React","Component","mapDispatchToProps","connect","ownProps","TodoItem","params","completed","completed_at","Date","put","editTodo","editText","Editing","theme","deleted","Text","onDoubleClick","checked","editing","todos","Todos","unCompletedTodos","map","todo","key","filter","t","unDeletedTodos","CountDown","countDown","timer","setInterval","time","document","title","onFinish","clearInterval","percent","duration","src","alt","style","width","min","Math","floor","second","confirm","TomatoAction","updateTomato","ended_at","forceUpdate","abortTomato","aborted","showConfirm","onOk","onCancel","okText","cancelText","unfinishedTomato","html","undefined","startTomato","startedAt","parse","started_at","timeNow","getTime","TomatoItem","format","TomatoImg","array","i","count","TomatoList","list","dates","d","tomatoes","finishedTomatoes","length","Object","keys","sort","b","splice","Tomatoes","addTomato","_","groupBy","tomato","TodoHistoryTodoItem","formatText","action","itemType","updated_at","TabPane","TodoHistory","finishedTodoList","finishedDates","date","dailyFinishedTodos","deletedTodoList","deletedDates","dailyDeletedTodos","defaultActiveKey","tab","finishedTodos","deletedTodos","Statistics","WeekTomatoes","todayGoal","differenceInDays","menu","Item","Home","getTodos","get","resources","assign","initTodos","getTomatoes","initTomatoes","getMe","user","overlay","account","Login","useState","password","submit","prefix","color","Password","to","SignUp","passwordConformation","password_confirmation","App","exact","path","component","Boolean","window","location","hostname","match","combineReducers","store","createStore","rootReducer","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.53249213.chunk.js","sourcesContent":["import { createBrowserHistory } from 'history';\n\nconst ENV = process.env.NODE_ENV;\nlet publicUrl: string = '';\n\nif (ENV === 'development') {\n  publicUrl = '/';\n} else if (ENV === 'production') {\n  publicUrl = '/potato';\n}\n\nconst history = createBrowserHistory({\n  basename: publicUrl\n})\n// const history = createBrowserHistory()\n\nexport default history","import { ADD_TODO, INIT_TODOS, UPDATE_TODO, EDIT_TODO } from '../actionTypes'\n\nexport const addTodo = (payload: any) => {\n  return {\n    type: ADD_TODO,\n    payload\n  }\n}\n\nexport const initTodos = (payload: any) => {\n  return {\n    type: INIT_TODOS,\n    payload\n  }\n}\n\nexport const updateTodo = (payload: any) => {\n  return {\n    type: UPDATE_TODO,\n    payload\n  }\n}\n\nexport const editTodo = (payload: any) => {\n  return {\n    type: EDIT_TODO,\n    payload\n  }\n}\n\n","export const ADD_TODO = 'ADD_TODO'\nexport const INIT_TODOS = 'INIT_TODOS'\nexport const UPDATE_TODO = 'UPDATE_TODO'\nexport const EDIT_TODO = 'EDIT_TODO'\nexport const ADD_TOMATO = 'ADD_TOMATO'\nexport const INIT_TOMATOES = 'INIT_TOMATOES'\nexport const UPDATE_TOMATO = 'UPDATE_TOMATO'\n","import axios from 'axios';\nimport history from '../config/history'\n\n\nconst appID = 'jsRqyboNdXtnuE2GHZKRuzPv'\nconst appSecret = 'xPp9SBcr5szSvxys24LUD1Gu'\n\nconst instance = axios.create({\n  baseURL: 'https://gp-server.hunger-valley.com/',\n  headers: {\n    't-app-id': appID,\n    't-app-secret': appSecret\n  }\n})\n\n\ninstance.interceptors.request.use(function (config) {\n  const xToken = localStorage.getItem('x-token')\n  if (xToken) {\n    config.headers['Authorization'] = `Bearer ${xToken}`\n  }\n  return config;\n}, function (error) {\n  console.log(error);\n\n  return Promise.reject(error);\n});\n\ninstance.interceptors.response.use(function (response) {\n  if (response.headers['x-token']) {\n    localStorage.setItem('x-token', response.headers['x-token'])\n  }\n  return response;\n}, function (error) {\n  // 拦截器\n  console.log(error);\n  if (error.response.status === 401) {\n    console.log('重定向');\n    // window.location.href = '/login'\n    history.push('login')\n  }\n  return Promise.reject(error);\n});\n\nexport default instance","import React from \"react\";\nimport \"./CountDown.scss\";\n\ninterface ICountDownProps {\n  timer: number;\n  duration: number;\n  onFinish: () => void;\n}\ninterface ICountDownState {\n  countDown: number;\n}\n\nlet timerId: NodeJS.Timeout;\nclass CountDown extends React.Component<ICountDownProps, ICountDownState> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      countDown: this.props.timer\n    };\n  }\n  get countDown() {\n    const min = Math.floor(this.state.countDown / 1000 / 60);\n    const second = Math.floor((this.state.countDown / 1000) % 60);\n    return `${min < 10 ? `0${min}` : min}:${\n      second < 10 ? `0${second}` : second\n    }`;\n  }\n  componentDidMount() {\n    timerId = setInterval(() => {\n      let time = this.state.countDown;\n      this.setState({ countDown: time - 1000 });\n      document.title = `${this.countDown} - 番茄APP`;\n      if (time < 1000) {\n        document.title = `番茄APP`;\n        this.props.onFinish();\n        clearInterval(timerId);\n      }\n    }, 1000);\n  }\n  componentWillUnmount() {\n    clearInterval(timerId);\n  }\n  public render() {\n    const percent = 1 - this.state.countDown / this.props.duration;\n    return (\n      <div className=\"CountDown\" id=\"CountDown\">\n        <img src=\"/images/time.svg\" alt=\"\"/>\n        <span className=\"restTime\">{this.countDown}</span>\n        <div className=\"progress\" style={{ width: `${percent * 100}%` }}></div>\n      </div>\n    );\n  }\n}\n\nexport default CountDown;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Input, Icon } from \"antd\";\nimport axios from \"../../config/axios\";\nimport { addTodo } from \"../../redux/actions/todos\";\n\ninterface ITodoInput {\n  description: string;\n}\n\ninterface ITodoInputProps {\n  addTodo: (payload: any) => any;\n}\n\nclass TodoInput extends React.Component<ITodoInputProps, ITodoInput> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      description: \"\"\n    };\n  }\n  onKeyUp = (e: any) => {\n    if (e.keyCode === 13 && this.state.description !== \"\") {\n      this.postTodo();\n    }\n  };\n  postTodo = async () => {\n    try {\n      const response = await axios.post(\"todos\", {\n        description: this.state.description\n      });\n      this.props.addTodo(response.data.resource);\n    } catch (error) {\n      throw new Error(error);\n    }\n    this.setState({ description: \"\" });\n  };\n  public render() {\n    const { description } = this.state;\n    const suffix = description ? (\n      <Icon type=\"enter\" onClick={this.postTodo}></Icon>\n    ) : (\n      <span></span>\n    );\n    return (\n      <div className=\"TodoInput\" id=\"TodoInput\">\n        <Input\n          placeholder=\"添加新任务\"\n          allowClear\n          value={description}\n          suffix={suffix}\n          onChange={e => this.setState({ description: e.target.value })}\n          onKeyUp={this.onKeyUp}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any, ownProps: any) => ({\n  ...ownProps\n});\n\nconst mapDispatchToProps = {\n  addTodo\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoInput);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { updateTodo, editTodo } from \"../../redux/actions/todos\";\nimport { Checkbox, Icon } from \"antd\";\nimport axios from \"../../config/axios\";\nimport \"./TodoItem.scss\";\n\ninterface ITodoItemProps {\n  id: number;\n  editing: boolean;\n  description: string;\n  completed: boolean;\n  editTodo: (id: number) => void;\n  updateTodo: (payload: any) => any;\n}\n\ninterface ITodoItemState {\n  editText: string;\n}\n\nclass TodoItem extends React.Component<ITodoItemProps, ITodoItemState> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      editText: this.props.description\n    };\n  }\n\n  updateTodo = async (params: any) => {\n    if (params.completed) {\n      params.completed_at = new Date();\n    }\n    try {\n      const response = await axios.put(`todos/${this.props.id}`, params);\n      this.props.updateTodo(response.data.resource);\n    } catch (e) {\n      throw new Error(e);\n    }\n  };\n  editTodo = () => {\n    this.props.editTodo(this.props.id);\n  };\n  onKeyUp = (e: any) => {\n    if (e.keyCode === 13 && this.state.editText !== \"\") {\n      this.updateTodo({ description: this.state.editText });\n    }\n  };\n  public render() {\n    const Editing = (\n      <div className=\"editing\">\n        <input\n          type=\"text\"\n          value={this.state.editText}\n          onChange={e => this.setState({ editText: e.target.value })}\n          onKeyUp={this.onKeyUp}\n        />\n        <div className=\"icon-wrapper\">\n          <Icon type=\"enter\"></Icon>\n          <Icon\n            type=\"delete\"\n            theme=\"filled\"\n            onClick={e => this.updateTodo({ deleted: true })}\n          ></Icon>\n        </div>\n      </div>\n    );\n    const Text = (\n      <span className=\"text\" onDoubleClick={this.editTodo}>\n        {this.props.description}\n      </span>\n    );\n    return (\n      <div className=\"TodoItem\" id=\"TodoItem\">\n        <Checkbox\n          checked={this.props.completed}\n          onChange={(e: any) =>\n            this.updateTodo({ completed: e.target.checked })\n          }\n        ></Checkbox>\n        {this.props.editing ? Editing : Text}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any, ownProps: any) => ({\n  todos: state.todos,\n  ...ownProps\n});\n\nconst mapDispatchToProps = {\n  updateTodo,\n  editTodo\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoItem);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport TodoInput from \"./TodoInput\";\nimport TodoItem from \"./TodoItem\";\nimport \"./Todos.scss\";\n\nclass Todos extends React.Component<any> {\n  // constructor(props: any) {\n  //   super(props);\n  // }\n  get unDeletedTodos() {\n    return this.props.todos.filter((t: any) => !t.deleted);\n  }\n  get unCompletedTodos() {\n    return this.unDeletedTodos.filter((t: any) => !t.completed);\n  }\n  get completedTodos() {\n    return this.unDeletedTodos.filter((t: any) => t.completed);\n  }\n\n  public render() {\n    return (\n      <div className=\"Todos\" id=\"Todos\">\n        <TodoInput></TodoInput>\n        <div className=\"todoList\">\n          {this.unCompletedTodos.map((todo: any) => {\n            return <TodoItem key={todo.id} {...todo}></TodoItem>;\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any, ownProps: any) => ({\n  todos: state.todos,\n  ...ownProps\n});\n\nexport default connect(mapStateToProps)(Todos);\n","import React from \"react\";\nimport { Button, Input, Icon, Modal } from \"antd\";\nimport axios from \"../../config/axios\";\nimport CountDown from \"./CountDown\";\nimport \"./TomatoAction.scss\";\n\ninterface ITomatoActionProps {\n  startTomato: () => void;\n  updateTomato: (payload: any) => void;\n  unfinishedTomato: any;\n}\n\ninterface ITomatoActionState {\n  description: string;\n}\nconst { confirm } = Modal;\nclass TomatoAction extends React.Component<\n  ITomatoActionProps,\n  ITomatoActionState\n> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      description: \"\"\n    };\n  }\n\n  onKeyUp = (e: any) => {\n    if (e.keyCode === 13 && this.state.description !== \"\") {\n      this.updateTomato({\n        description: this.state.description,\n        ended_at: new Date()\n      });\n      this.setState({ description: \"\" });\n    }\n  };\n\n  onFinish = () => {\n    this.forceUpdate();\n  };\n\n  abortTomato = () => {\n    this.updateTomato({ aborted: true });\n    document.title = `番茄APP`;\n  };\n  showConfirm = () => {\n    confirm({\n      title: \"您目前正在一个番茄工作时间中，要放弃这个番茄吗？\",\n      onOk: () => {\n        this.abortTomato();\n      },\n      onCancel: () => {\n        console.log(\"取消\");\n      },\n      okText: \"确定\",\n      cancelText: \"取消\"\n    });\n  };\n\n  updateTomato = async (params: any) => {\n    try {\n      const response = await axios.put(\n        `tomatoes/${this.props.unfinishedTomato.id}`,\n        params\n      );\n      this.props.updateTomato(response.data.resource);\n    } catch (e) {\n      throw new Error(e);\n    }\n  };\n  public render() {\n    let html = <div />;\n    if (this.props.unfinishedTomato === undefined) {\n      html = (\n        <Button\n          className=\"startTomatoButton\"\n          onClick={e => this.props.startTomato()}\n        >\n          开始番茄\n        </Button>\n      );\n    } else {\n      const startedAt = Date.parse(this.props.unfinishedTomato.started_at);\n      const duration = this.props.unfinishedTomato.duration;\n      const timeNow = new Date().getTime();\n      if (timeNow - startedAt > duration) {\n        html = (\n          <div className=\"inputWrapper\">\n            <Input\n              value={this.state.description}\n              placeholder=\"请输入你刚刚完成的任务\"\n              onChange={e => this.setState({ description: e.target.value })}\n              onKeyUp={e => this.onKeyUp(e)}\n            ></Input>\n            <Icon\n              type=\"close-circle\"\n              className=\"abort\"\n              onClick={this.showConfirm}\n            />\n          </div>\n        );\n      } else if (timeNow - startedAt < duration) {\n        const timer = duration - timeNow + startedAt;\n        html = (\n          <div className=\"countDownWrapper\">\n            <CountDown\n              timer={timer}\n              onFinish={this.onFinish}\n              duration={duration}\n            />\n            <Icon\n              type=\"close-circle\"\n              className=\"abort\"\n              onClick={this.showConfirm}\n            ></Icon>\n          </div>\n        );\n      }\n    }\n    return (\n      <div className=\"TomatoAction\" id=\"TomatoAction\">\n        {html}\n      </div>\n    );\n  }\n}\n\nexport default TomatoAction;\n","import React from \"react\";\nimport { format } from \"date-fns\";\nimport \"./TomatoList.scss\";\n\ninterface ITomatoListProps {\n  finishedTomatoes: any;\n}\n\nconst TomatoItem = function(props: any) {\n  return (\n    <div className=\"TomatoItem\" id=\"TomatoItem\">\n      <span className=\"timeRange\">\n        {format(props.started_at, \"H:mm\")} - {format(props.ended_at, \"H:mm\")}\n      </span>\n      <span className=\"description\">{props.description}</span>\n    </div>\n  );\n};\n\nconst TomatoImg = function(props:any){\n  const array = []\n  for(let i=0; i<props.count; i++){\n    array.push(<img src=\"/images/tomato.svg\"  key={i}  alt=\"\"/>)\n  }\n  return (\n    <span>\n      {\n        array\n      }\n    </span>\n  )\n}\n\nclass TomatoList extends React.Component<ITomatoListProps> {\n  // constructor(props: any) {\n  //   super(props);\n  // }\n  get dates() {\n    const dates = Object.keys(this.props.finishedTomatoes);\n    return dates.sort((a, b) => Date.parse(b) - Date.parse(a)).splice(0, 3);\n  }\n  public render() {\n    const list = this.dates.map(d => {\n      const tomatoes = this.props.finishedTomatoes[d];\n      return (\n        <div key={d} className=\"dailyTomatoes\">\n          <div className=\"title\">\n            <span className=\"dateTime\">{format(d, \"M月DD日\")}</span>\n            <TomatoImg count={tomatoes.length}></TomatoImg>\n            <span className=\"finishedCount\">完成了 <strong>{tomatoes.length}</strong> 个番茄</span>\n          </div>\n          {tomatoes.map((t: any) => (\n            <TomatoItem key={t.id} {...t}></TomatoItem>\n          ))}\n        </div>\n      );\n    });\n    return (\n      <div className=\"TomatoList\" id=\"TomatoList\">\n        {list}\n      </div>\n    );\n  }\n}\n\nexport default TomatoList;\n","import React from \"react\";\nimport \"./Tomatoes.scss\";\nimport { connect } from \"react-redux\";\nimport TomatoAction from \"./TomatoAction\";\nimport TomatoList from \"./TomatoList\";\nimport { addTomato, updateTomato } from \"../../redux/actions/tomatoes\";\nimport axios from \"../../config/axios\";\nimport _ from \"lodash\";\nimport { format } from \"date-fns\";\n\ninterface ITomatoesProps {\n  addTomato: (payload: any) => any;\n  updateTomato: (payload: any) => any;\n  tomatoes: any[];\n}\n\nclass Tomatoes extends React.Component<ITomatoesProps> {\n  // constructor(props: any) {\n  //   super(props);\n  // }\n\n  get unfinishedTomato() {\n    return this.props.tomatoes.filter(\n      (t: any) => !t.description && !t.ended_at && !t.aborted\n    )[0];\n  }\n  get finishedTomatoes() {\n    const finishedTomatoes = this.props.tomatoes.filter(\n      t => t.description && t.ended_at && !t.aborted\n    );\n    return _.groupBy(finishedTomatoes, tomato => {\n      return format(tomato.started_at, \"YYYY-MM-D\");\n    });\n  }\n\n  startTomato = async () => {\n    try {\n      const response = await axios.post(\"tomatoes\", {\n        duration: 1500000\n      });\n      this.props.addTomato(response.data.resource);\n    } catch (e) {\n      throw new Error(e);\n    }\n  };\n  public render() {\n    return (\n      <div className=\"Tomatoes\" id=\"Tomatoes\">\n        <TomatoAction\n          startTomato={this.startTomato}\n          unfinishedTomato={this.unfinishedTomato}\n          updateTomato={this.props.updateTomato}\n        ></TomatoAction>\n        <TomatoList finishedTomatoes={this.finishedTomatoes}></TomatoList>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any, ownProps: any) => ({\n  tomatoes: state.tomatoes,\n  ...ownProps\n});\n\nconst mapDispatchToProps = {\n  addTomato,\n  updateTomato\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Tomatoes);\n","import { ADD_TOMATO, INIT_TOMATOES, UPDATE_TOMATO } from '../actionTypes'\n\nexport const addTomato = (payload: any) => {\n  return {\n    type: ADD_TOMATO,\n    payload\n  }\n}\n\nexport const initTomatoes = (payload: any) => {\n  return {\n    type: INIT_TOMATOES,\n    payload\n  }\n}\n\nexport const updateTomato = (payload: any) => {\n  return {\n    type: UPDATE_TOMATO,\n    payload\n  }\n}","import * as React from \"react\";\nimport { connect } from \"react-redux\";\nimport { updateTodo } from \"../../../redux/actions/todos\";\nimport { format } from \"date-fns\";\nimport \"./TodoHistoryTodoItem.scss\";\nimport axios from \"../../../config/axios\";\n\ninterface ITodoHistoryTodoItemProps {\n  todo: any;\n  itemType: string;\n  updated_at: any;\n  description: any;\n  updateTodo: (payload: any) => void;\n}\n\nclass TodoHistoryTodoItem extends React.Component<ITodoHistoryTodoItemProps> {\n  updateTodo = async (params: any) => {\n    try {\n      console.log(params);\n      \n      const response = await axios.put(`todos/${this.props.todo.id}`, params);\n      this.props.updateTodo(response.data.resource);\n      console.log(response.data.resource);\n      \n    } catch (e) {\n      throw new Error(e);\n    }\n  };\n  public render() {\n    let formatText;\n    let action;\n    let time;\n    if (this.props.itemType === \"finished\") {\n      formatText = \"HH:mm\";\n      time = this.props.todo.updated_at;\n      action = (\n        <div className=\"action\">\n          <span onClick={() => this.updateTodo({ completed: false })}>恢复</span>\n          <span onClick={() => this.updateTodo({ deleted: true })}>删除</span>\n        </div>\n      );\n    } else if (this.props.itemType === \"deleted\") {\n      formatText = \"YYYY-MM-DD\";\n      time = this.props.todo.updated_at;\n      action = (\n        <div className=\"action\">\n          <span onClick={() => this.updateTodo({ deleted: false })}>恢复</span>\n        </div>\n      );\n    }\n    return (\n      <div className=\"TodoHistoryTodoItem\" id=\"TodoHistoryTodoItem\">\n        <div className=\"text\">\n          <span className=\"time\">{format(time, formatText)}</span>\n          <span className=\"description\">{this.props.todo.description}</span>\n        </div>\n        <div className=\"action\">{action}</div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any, ownProps: any) => ({\n  ...ownProps\n});\n\nconst mapDispatchToProps = {\n  updateTodo\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TodoHistoryTodoItem);\n","import * as React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Tabs } from \"antd\";\nimport _ from \"lodash\";\nimport { format } from \"date-fns\";\nimport \"./TodoHistory.scss\";\nimport TodoHistoryTodoItem from \"./TodoHistoryTodoItem\";\n\ninterface ITodoHistoryProps {\n  todos: any[];\n}\n\nconst { TabPane } = Tabs;\n\n// const TodoItem = (props: any) => {\n//   return (\n//     <div className=\"todoItem\">\n//       <span className=\"time\">{format(props.updated_at, \"HH:mm\")}</span>\n//       <span className=\"description\">{props.description}</span>\n//     </div>\n//   );\n// };\n\nclass TodoHistory extends React.Component<ITodoHistoryProps> {\n  get finishedTodos() {\n    return this.props.todos.filter(t => t.completed && !t.deleted);\n  }\n  get deletedTodos() {\n    return this.props.todos.filter(t => t.deleted);\n  }\n  get dailyFinishedTodos() {\n    return _.groupBy(this.finishedTodos, todo => {\n      return format(todo.updated_at, \"YYYY-MM-D\");\n    });\n  }\n  get dailyDeletedTodos() {\n    return _.groupBy(this.deletedTodos, todo => {\n      return format(todo.updated_at, \"YYYY-MM-D\");\n    });\n  }\n  get finishedDates() {\n    return Object.keys(this.dailyFinishedTodos).sort(\n      (a, b) => Date.parse(b) - Date.parse(a)\n    );\n  }\n  get deletedDates() {\n    return Object.keys(this.dailyDeletedTodos).sort(\n      (a, b) => Date.parse(b) - Date.parse(a)\n    );\n  }\n  public render() {\n    const finishedTodoList = this.finishedDates.map(date => {\n      return (\n        <div key={date} className=\"dailyTodos\">\n          <div className=\"summary\">\n            <div className=\"date\">\n              <span>{date}</span>\n              <span>周五</span>\n              <p className=\"finishedCount\">\n                完成了 {this.dailyFinishedTodos[date].length} 个任务\n              </p>\n            </div>\n          </div>\n          <div className=\"todoList\">\n            {this.dailyFinishedTodos[date].map(todo => (\n              <TodoHistoryTodoItem\n                key={todo.id}\n                todo={todo}\n                itemType=\"finished\"\n              ></TodoHistoryTodoItem>\n            ))}\n          </div>\n        </div>\n      );\n    });\n    const deletedTodoList = this.deletedDates.map(date => {\n      return (\n        <div key={date} className=\"dailyTodos\">\n          <div className=\"summary\">\n            <p className=\"date\">\n              <span>{date}</span>\n              <span>周五</span>\n            </p>\n          </div>\n          <div className=\"todoList\">\n            {this.dailyDeletedTodos[date].map(todo => (\n              <TodoHistoryTodoItem\n                key={todo.id}\n                todo={todo}\n                itemType=\"deleted\"\n              ></TodoHistoryTodoItem>\n            ))}\n          </div>\n        </div>\n      );\n    });\n\n    return (\n      <Tabs defaultActiveKey=\"1\" className=\"TodoHistoryTabs\">\n        <TabPane tab=\"已完成的任务\" key=\"1\">\n          <div className=\"TodoHistory\" id=\"TodoHistory\">\n            {finishedTodoList}\n          </div>\n        </TabPane>\n        <TabPane tab=\"已删除的任务\" key=\"2\">\n          <div className=\"TodoHistory\" id=\"TodoHistory\">\n            {deletedTodoList}\n          </div>\n        </TabPane>\n      </Tabs>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any, ownProps: any) => ({\n  todos: state.todos,\n  ...ownProps\n});\n\nconst mapDispatchToProps = {};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoHistory);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport \"./Statistics.scss\";\n// import Polygon from \"./Polygon\";\nimport TodoHistory from \"./TodoHistory/TodoHistory\";\nimport _ from \"lodash\";\nimport { format,differenceInDays } from \"date-fns\";\n\ninterface IStatisticsProps {\n  todos: any[];\n  tomatoes: any[];\n\n}\n\nclass Statistics extends React.Component<IStatisticsProps> {\n  get WeekTomatoes() {\n    const finishedTomatoes = this.props.tomatoes.filter(\n      t => t.description && t.ended_at && !t.aborted\n    );\n    \n    return finishedTomatoes.filter(tomato => {\n      return differenceInDays(new Date(),tomato.ended_at) <= 7\n    });\n  }\n  get finishedTodos() {\n    return this.props.todos.filter(t => t.completed && !t.deleted);\n  }\n  get finishedTomatoes() {\n    return this.props.tomatoes.filter(\n      t => t.description && t.ended_at && !t.aborted\n    );\n  }\n  get todayGoal() {\n    const finishedTomatoes = this.props.tomatoes.filter(\n      t => t.description && t.ended_at && !t.aborted\n    );\n    return finishedTomatoes.filter(tomato => {\n      const finishedDate = format(tomato.ended_at,\"YYYY-MM-D\")\n      const today = format(new Date(),\"YYYY-MM-D\")\n      return finishedDate === today\n    });\n  }\n  get dailyTodos() {\n    const obj = _.groupBy(this.finishedTodos, todo => {\n      return format(todo.updated_at, \"YYYY-MM-D\");\n    });\n    return obj;\n  }\n  public render() {\n    return (\n      <div className=\"Statistics\" id=\"Statistics\">\n        <ul>\n          <li>\n            <span>统计</span>\n            <span>一周累计</span>\n            <span>{this.WeekTomatoes.length}</span> \n          </li>\n          <li>\n            <span>目标</span>\n            <span>今日目标</span>\n            <span>{this.todayGoal.length}/8</span> \n          </li>\n          <li>\n            <span>番茄历史</span>\n            <span>累计完成番茄</span>\n            <span>{this.finishedTomatoes.length}</span>\n          </li>\n          <li>\n            <span>任务历史</span>\n            <span>累计完成任务</span>\n            <span>{this.finishedTodos.length}</span>\n             \n            {/* <Polygon\n              data={this.dailyTodos}\n              totalFinishedCount={this.finishedTodos.length}\n            ></Polygon> */}\n          </li>\n        </ul>\n        <TodoHistory></TodoHistory>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any, ownProps: any) => ({\n  todos: state.todos,\n  tomatoes: state.tomatoes,\n  ...ownProps\n});\n\nconst mapDispatchToProps = {};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Statistics);\n","import * as React from \"react\";\nimport { connect } from \"react-redux\";\nimport { initTodos } from \"../../redux/actions/todos\";\nimport { initTomatoes } from \"../../redux/actions/tomatoes\";\nimport { Button, Dropdown, Icon, Menu } from \"antd\";\nimport axios from \"../../config/axios\";\nimport history from \"../../config/history\";\nimport \"./Home.scss\";\nimport Todos from \"../Todos/Todos\";\nimport Tomatoes from \"../Tomatoes/Tomatoes\";\nimport Statistics from \"../Statistics/Statistics\";\n\ninterface IIndexProps {\n  initTodos: any;\n}\n\ninterface IIndexState {\n  user: any;\n}\n\nconst loginOut = () => {\n  localStorage.setItem(\"x-token\", \"\");\n  history.push(\"/login\");\n};\nconst menu = (\n  <Menu>\n    <Menu.Item key=\"1\">\n      {/* <Icon type=\"user\"></Icon> 个人设置 */}\n    </Menu.Item>\n    <Menu.Item key=\"2\">\n      <Icon type=\"logout\" onClick={loginOut}></Icon> 注销\n    </Menu.Item>\n  </Menu>\n);\n\nclass Home extends React.Component<any, IIndexState> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      user: {}\n    };\n  }\n\n  getTodos = async () => {\n    try {\n      const response = await axios.get(\"todos\");\n      const todos = response.data.resources.map((t: any) =>\n        Object.assign({}, t, { editing: false })\n      );\n      this.props.initTodos(todos);\n    } catch (e) {\n      throw new Error(e);\n    }\n  };\n  getTomatoes = async () => {\n    try {\n      const response = await axios.get(\"tomatoes\");\n      this.props.initTomatoes(response.data.resources);\n    } catch (e) {\n      throw new Error(e);\n    }\n  };\n  getMe = async () => {\n    const response = await axios.get(\"me\");\n    this.setState({ user: response.data });\n  };\n  async componentDidMount() {\n    await this.getMe();\n    await this.getTodos();\n    await this.getTomatoes();\n  }\n\n\n  render() {\n    return (\n      <div className=\"Home\" id=\"Home\">\n        <header>\n          <span className=\"logo\">\n            <img src=\"/images/tomato.svg\" alt=\"\"/>\n            <h1>番茄Todo</h1>\n          </span>\n          <Dropdown overlay={menu}>\n            <Button>\n              <span>你好，{this.state.user && this.state.user.account}</span>\n              <Icon type=\"down\"></Icon>\n            </Button>\n          </Dropdown>\n        </header>\n        <main>\n          <Tomatoes></Tomatoes>\n          <Todos></Todos>\n        </main>\n        <Statistics></Statistics>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any, ownProps: any) => ({\n  ...ownProps\n});\n\nconst mapDispatchToProps = {\n  initTodos,\n  initTomatoes\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\n","import React from \"react\";\nimport { Input, Icon, Button } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"../../config/axios\";\nimport \"./Login.scss\";\n\ninterface ILoginState {\n  account: string;\n  password: string;\n}\n\nfunction Login(props: any) {\n  const [state, setState] = React.useState({\n    account: \"\",\n    password: \"\"\n  });\n  const onChange = (key: keyof ILoginState, value: string) => {\n    setState({ ...state, [key]: value });\n  };\n\n  const submit = async () => {\n    const { account, password } = state;\n\n    try {\n      await axios.post(\"sign_in/user\", {\n        account,\n        password\n      });\n      props.history.push(\"/\");\n    } catch (e) {\n      throw new Error(e);\n    }\n  };\n  return (\n    <div className=\"Login\" id=\"Login\">\n      <h1>番茄闹钟登录</h1>\n      <Input\n        placeholder=\"请输入你的用户名\"\n        prefix={<Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\n        allowClear\n        value={state.account}\n        onChange={e => onChange(\"account\", e.target.value)}\n      />\n      <Input.Password\n        value={state.password}\n        placeholder=\"请输入密码\"\n        onChange={e => onChange(\"password\", e.target.value)}\n      />\n      <Button className=\"loginButton\" type=\"primary\" onClick={submit}>\n        登录\n      </Button>\n      <p>\n        如果你没有账号，请立即 <Link to=\"/signUp\">注册</Link>\n      </p>\n    </div>\n  );\n}\n\nexport default Login;\n","import React from \"react\";\nimport { Input, Icon, Button } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"../../config/axios\";\nimport \"./SignUp.scss\";\n\ninterface ISignUpState {\n  account: string;\n  password: string;\n  passwordConformation: string;\n}\n\nfunction SignUp(props: any) {\n  const [state, setState] = React.useState({\n    account: \"\",\n    password: \"\",\n    passwordConformation: \"\"\n  });\n  const onChange = (key: keyof ISignUpState, value: string) => {\n    setState({ ...state, [key]: value });\n  };\n  const submit = async () => {\n    const { account, password, passwordConformation } = state;\n\n    try {\n      await axios.post(\"sign_up/user\", {\n        account,\n        password,\n        password_confirmation: passwordConformation\n      });\n      props.history.push(\"/\");\n    } catch (e) {\n      throw new Error(e);\n    }\n  };\n  return (\n    <div className=\"Component\" id=\"SignUp\">\n      <h1>番茄闹钟注册</h1>\n      <Input\n        placeholder=\"请输入你的用户名\"\n        prefix={<Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\n        allowClear\n        value={state.account}\n        onChange={e => onChange(\"account\", e.target.value)}\n      />\n      <Input.Password\n        value={state.password}\n        placeholder=\"请输入密码\"\n        onChange={e => onChange(\"password\", e.target.value)}\n      />\n      <Input.Password\n        placeholder=\"请确认密码\"\n        value={state.passwordConformation}\n        onChange={e => onChange(\"passwordConformation\", e.target.value)}\n      />\n      <Button className=\"loginButton\" type=\"primary\" onClick={submit}>\n        注册\n      </Button>\n      <p>\n        如果你有账号，请立即 <Link to=\"/login\">登录</Link>\n      </p>\n    </div>\n  );\n}\n\nexport default SignUp;\n","import React from \"react\";\nimport { Router, Route } from \"react-router-dom\";\nimport history from './config/history'\nimport \"./App.css\";\nimport Home from \"./components/Home/Home\";\nimport Login from \"./components/Login/Login\";\nimport SignUp from \"./components/SignUp/SignUp\";\n\nfunction App() {\n  return (\n    <Router history={history}>\n      <Route exact={true} path=\"/potato/\" component={Home}></Route>\n      <Route path=\"/login\" component={Login}></Route>\n      <Route path=\"/signUp\" component={SignUp}></Route>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { combineReducers } from 'redux'\nimport todos from './todos'\nimport tomatoes from './tomatoes'\n\nexport default combineReducers({ todos, tomatoes })","import { ADD_TODO, INIT_TODOS, UPDATE_TODO, EDIT_TODO } from '../actionTypes'\n\nexport default (state: any[] = [], action: any): any => {\n  switch (action.type) {\n    case ADD_TODO:\n      return [...state, action.payload]\n    case INIT_TODOS:\n      return [...action.payload]\n    case UPDATE_TODO:\n      return state.map(t => {\n        if (t.id === action.payload.id) {\n          return action.payload\n        } else {\n          return t\n        }\n      })\n    case EDIT_TODO:\n      return state.map(t => {\n        if (t.id === action.payload) {\n          return Object.assign({}, t, { editing: true })\n        } else {\n          return Object.assign({}, t, { editing: false })\n        }\n      })\n    default:\n      return state\n  }\n}","import { ADD_TOMATO, INIT_TOMATOES, UPDATE_TOMATO } from '../actionTypes'\n\nexport default (state: any[] = [], action: any) => {\n  switch (action.type) {\n    case ADD_TOMATO:\n      return [action.payload, ...state]\n    case UPDATE_TOMATO:\n      return state.map(t => {\n        if (t.id === action.payload.id) {\n          return action.payload\n        } else {\n          return t\n        }\n      })\n    case INIT_TOMATOES:\n      return [...action.payload]\n    default:\n      return state\n  }\n}","import { createStore } from \"redux\";\nimport rootReducer from './reducers/index'\n\nconst store = createStore(rootReducer);\n\nexport default store","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}